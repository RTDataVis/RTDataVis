{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/project_data.js","../../src/organization_data.js","../../src/workshops_data.js","../../src/hpc_data.js","../../src/simple_tile.svelte","../../src/test.svelte","../../src/info_section.svelte","../../src/lower_info.svelte","../../src/projects_info.svelte","../../src/hpc_info.svelte","../../src/organization_info.svelte","../../src/workshops_info.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\ntb added\n\njudging the data vis challenge\nbryan carter photogrammetry\n\n*/\nexport default [\n {\n    \"title\": \"Tech Core Biosphere2 Collaboration Internship\",\n    \"image\": \"tech_core_b2_2021_summer_tall.png\",\n    \"link\": \"tech_core_b2\",\n    \"subtext\": \"I was lucky enough to work on the first major collaboration between the Biosphere2 and the Tech Core student startup incubator at Eller College of business. I oversaw 5 interns for 6 weeks in the summer of 2021 on a scientific visualization project based on data from an induced drought experiment run in the rainforest biome. We performed photogrammetry with Metashape, classic data vis in Vega Lite, and 3D modeling and 360 video capture in Unity. These results are intended for use on the tech core Biosphere webpage, and viewable in 360 WebVR.\",\n    \"projlinks\": [{\n      \"text\":\"Drive project folder\",\n      \"url\":\"https://drive.google.com/drive/folders/13v9QfUFVjQD-x7dh8chQZFvAxmy5zmx6?usp=sharing\"\n    },{\n      \"text\":\"cinematic vis presentation video\",\n      \"url\":\"https://www.youtube.com/watch?v=EiQ9S5lNbA8\"\n\n    },{\n      \"text\":\"classic data vis\",\n      \"url\":\"https://n2omeredithvis.baylyd.repl.co/ https://co2meredithvis.baylyd.repl.co/\"\n    }],\n    \"contact\": \"Ash Black, Aaron Bugaj, Laura Meredith, Trevor Hoshiwara, Muhtasim Al-Farabi, Samantta Garcia, Nick Vinas, and Jai Stellmacher\"\n  },\n {\n    \"title\": \"Experiments with Irydium\",\n    \"image\": \"developing.png\",\n    \"link\": \"irydium_experiments\",\n    \"subtext\": \"Back in the day I was a Mozilla Iodide fan boy, but that project has stopped active development. More recently Will Lachance from that original group is working on another data vis notebook environment that I'm super into called Irydium. Iridium is the next element in the periodic table and so goes the name. The actual tool will be a markdown styled notebook for explanatory data vis with support for svelte and pyodide cells. My role is guinea pig par excellence.\",\n    \"projlinks\": \"\",\n    \"contact\": \"Will Lachance (Mozilla)\"\n  },\n {\n    \"title\": \"Digital Borderlands Aframe Conversion\",\n    \"image\": \"digital_borderlands_conv.png\",\n    \"link\": \"digital_borderlands\",\n    \"subtext\": \"This was a conversion on behalf of new faculty in Digital Humanities Jonathan Crisman. The other name of this project is the migrant forensic empathy project. Jonathan is trying to create an experiential app to capture some fraction of the impact of deaths along the border. I reconstructed the landscape from USGS materials using meshlab. I also wrote algorithms to accurately place cross markers at the locations that the medical examiner's database says people were found. I then used aframe to create a WebVR scene for all this complete with click based navigation of a region of the southwest that is larger than tucson.\",\n    \"projlinks\": [\n      {\n        \"text\": \"OSF Project Page\",\n        \"url\": \"https://osf.io/v9swc/\"\n      },\n      {\n        \"text\": \"Github repo\",\n        \"url\": \"https://github.com/DevinBayly/digital_borderlands_conversion\"\n      },{\n        \"text\":\"Google Drive project folder\",\n        \"url\":\"https://drive.google.com/drive/folders/1v42W_dgflWdtrD8QBI_OVmz3nfVLVp34?usp=sharing\"\n      }\n    ],\n    \"contact\": \"Jonathan Crisman\"\n  },\n {\n    \"title\": \"Autamus Interface\",\n    \"image\": \"autamus_icon.png\",\n    \"link\": \"autamus_interface\",\n    \"subtext\": \"Alec Scott has created an 'Autonomous Containerized Build System' aimed at 'maintaining large collections of up-to-date applications' which he would like to make available researchers at the UA to add their researcher containers to. I worked on a simple web interface which allows researchers to access and explore these containers.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Interface page\",\n        \"url\": \"https://devinbayly.github.io/autamus-interface/public/\"\n      },\n    {\n        \"text\": \"Github repo\",\n        \"url\": \"https://github.com/DevinBayly/autamus-interface/tree/main\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n {\n    \"title\": \"Observable portfolio\",\n    \"image\": \"developing.png\",\n    \"link\": \"observable_port\",\n    \"subtext\": \"Many of the projects I've worked on pertain more to advanced 3D modeling/VR and are less like info-vis as a service. I will produce a number of 'classic' examples of info-vis through the Observable platform to make it clear to my clients that this is an option for my consultations.\",\n    \"projlinks\": [\n      {\n        \"text\": \"In progress\",\n        \"url\": \"\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Astronomy Multimedia Performance\",\n    \"image\": \"developing.png\",\n    \"link\": \"astro_dance\",\n    \"subtext\": \"I'll be assisting a group of researchers and artists with producing a multimedia performance in the fall. I'm responsible for 2 aspects of this performance. The first is using HPC resources to interrogate astronomy simulations provided by Chris Impey and output data driven animations. Secondly, I'm going to be working with Abby who is an iSchool undergraduate student on interactive visualizations mapped to a dancer as they perform.\",\n    \"projlinks\": [\n      {\n        \"text\": \"In progress\",\n        \"url\": \"\"\n      }\n    ],\n    \"contact\": \"Yuanyuan 'Kay' He, Chris Impey, Win Burleson, Gustavo Almeida, Hayley Meier, Maddie Brown, , Abby Collier\"\n  },{\n    \"title\": \"Oyster Vibrio Literature Review\",\n    \"image\": \"oyster_map.png\",\n    \"link\": \"oystervibrio\",\n    \"subtext\": \"Vibrio illness from oysters can be a moderate to life threatening risk from eating raw oysters. I’m assisting Emily Cooksey with creating a web map of her literature review representing relevant parameters of studies spatially where they took place around the world. Most of the final work to setup the website was performed by Jeff Oliver, I only provided intermediate support.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Shiny App progress\",\n        \"url\": \"https://emilycooksey.shinyapps.io/shiny/\"\n      },{\n        \"text\": \"Literature Review, 'The world is your oyster'\",\n        \"url\":\"https://repository.arizona.edu/handle/10150/658631\"\n      },{\n        \"text\":\"Github repo\",\n        \"url\":\"https://github.com/emcooksey/Global_Vp\"\n      }\n    ],\n    \"contact\": \"Jean McClelland, Emily Cooksey\"\n  },\n  {\n    \"title\": \"COVID Retail Mitigation Web Scraping\",\n    \"image\": \"retail_vis.png\",\n    \"link\": \"retailscraping\",\n    \"subtext\": \"This group of researchers wants to assemble a collection of best practices for the retail sector to mitigate the threat of coronavirus exposure to their staff and customers. I’m assisting with web scraping data from 20 retailer websites from March-December 2020 that they may use to evaluate the practices put in place over time. I created an OSF project to capture all the relevant information about project. In this project I describe how to do historic webscraping with python's Scrapy library and the web archive Wayback Machine. I also include a link to the interactive environment to run the scraper code in a jupyternotebook binder.\",\n    \"projlinks\": [\n      {\n        \"text\": \"OSF project page\",\n        \"url\": \"https://osf.io/uq38n/\"\n      },\n      {\n        \"text\": \"Binder Link\",\n        \"url\": \"https://mybinder.org/v2/gh/DevinBayly/retail-covid-mitigation-marathon-notebooks-/main\"\n      },\n      {\n        \"text\":\"Observable notebook visualization (need data.csv from OSF)\",\n        \"url\":\"https://observablehq.com/@devinbayly/retail-visualization-scatter-plot\"\n      },\n      {\n        \"text\": \"Github repo for python code\",\n        \"url\": \"https://github.com/DevinBayly/retail-covid-mitigation-marathon-notebooks/tree/main\"\n      }\n    ],\n    \"contact\": \"Mona Arora, Sabrina Helm, Alexis H Wait,Zoe Fox, Ignacio Luri\"\n  },\n  {\n    \"title\": \"Memory Jogger for Wifi Crowd Analysis\",\n    \"image\": \"mem_jogger.png\",\n    \"link\": \"#test\",\n    \"subtext\": \"Contact tracers have a difficult job during the COVID 19 pandemic, but tracing efforts could be much more efficient if individuals could remind themselves where they’ve been on campus by looking at a 2 week summary of the locations they’ve used wifi. I’ve built a visualization tool to display location and duration on an interactive campus map for ranges of time selected by a user.\",\n    \"projlinks\": [\n      {\n        \"text\": \"In progress\",\n        \"url\": \"\"\n      }\n    ],\n    \"contact\": \"Sudha Ram, Nirav Merchant, Jeremy Frumkin\"\n  },\n  {\n    \"title\": \"3D & VR Retrofit AZLIVE\",\n    \"image\": \"retrofit.png\",\n    \"link\": \"retrofitAZLIVE\",\n    \"subtext\": \"AZLIVE was a visualization studio that existed before my time with the visualization team, so it seemed like an interesting project to retrofit some of their previous creations for VR display on the web. Three projects were successfully converted: Domoni Crater Mars, Spider Room Psychology Experiment, Southwest Pots.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Domoni Crater (for desktop/laptop)\",\n        \"url\": \"https://lava-step.glitch.me\"\n      },\n      {\n        \"text\": \"Link:  Domoni Crater (for mobile)\",\n        \"url\": \"https://solar-wolfsbane.glitch.me/\"\n      },\n      {\n        \"text\": \"Link:  Spider Room  Southwest Pots\",\n        \"url\": \"http://held-alamosaurus.glitch.me/\"\n      }\n    ],\n    \"contact\": \"Jen Nichols, Amanda Meeks, Anna Montana\"\n  },\n  {\n    \"title\": \"Force Directed Biochem Networks\",\n    \"image\": \"biochem_network.png\",\n    \"link\": \"biochem-networks\",\n    \"subtext\": \"Brittany works with cancer genes and she wanted to better understand the relationship between protein groups and the cancer genes that may be transcribed to make the proteins. I created an interactive force directed network visualization from her data that she can modify using play/pause buttons, sliders to adjust the forces used in laying out the graph, and drag and drop repositioning options for elements.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Github repo\",\n        \"url\": \"https://github.com/DevinBayly/biochem_networks\"\n      },\n      {\n        \"text\": \"Link: Live interactive web visualization\",\n        \"url\": \" https://devinbayly.github.io/biochem_networks/testing/public/\"\n      }\n    ],\n    \"contact\": \"Brittany Stankavich\"\n  },\n  {\n    \"title\": \"Spring Break Photo COVID maps\",\n    \"image\": \"spring_break_covid.png\",\n    \"link\": \"spring-break-covid\",\n    \"subtext\": \"Around the beginning of the COVID pandemic students went on spring break and Dr. Arora asked students to take photos of all of the signage around them related to the pandemic. I assisted in spatially representing these photos in an interactive web map.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Github repo\",\n        \"url\": \"https://github.com/DevinBayly/covid-spring-break-tracking\"\n      },\n      {\n        \"text\": \"Link: Live interactive web map\",\n        \"url\": \" https://devinbayly.github.io/covid-spring-break-tracking/app/\"\n      }\n    ],\n    \"contact\": \"Dr. Mona Arora, Kiri Carini\"\n  },\n  {\n    \"title\": \"Social VR Museum Internship\",\n    \"image\": \"joshuas_museum.png\",\n    \"link\": \"social-vr-museum\",\n    \"subtext\": \"In this project I oversaw Joshua Garver’s digital preservation capstone project to generate 3D models from collections of photos online and make these models accessible using Mozilla’s Social VR platform Hubs.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Social VR experience in your browser\",\n        \"url\": \"https://hubs.mozilla.com/nCEZgN9/joshuas-reconstructed-museum\"\n      },\n      {\n        \"text\": \"Link: Museum Video Walkthrough\",\n        \"url\": \"https://drive.google.com/open?id=17v6ho-CS5L3731cXsv4qZ2OhNZEZClxO\"\n      }\n    ],\n    \"contact\": \"Joshua Garver, Dr. Diana Daly\"\n  },\n  {\n    \"title\": \"BIO5 Virtual Reality Tour\",\n    \"image\": \"bio5_VR_TOUR.png\",\n    \"link\": \"bio5-vr-tour\",\n    \"subtext\": \"This project was to implement a WebVR experience of the BIO5 Institute to share the location and its cutting edge programs with the public. Features a tour of the art in the building, and student researchers in action.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Github repo\",\n        \"url\": \"https://github.com/DevinBayly/VRTourDev\"\n      },\n      {\n        \"text\": \"Link: VR tour homepage\",\n        \"url\": \"https://bio5.github.io/VirtualTour/\"\n      }\n    ],\n    \"contact\": \"Amy Randall, Lomax Boyd, Deanna Sanchez\"\n  },\n  {\n    \"title\": \"Neuro Choropleth\",\n    \"image\": \"neuro_choropleth.png\",\n    \"link\": \"neuro-choro\",\n    \"subtext\": \"This project aimed to update a visualization used to efficiently analyze neuroimaging results by laying out data within regions associated with popular neurological atlases.\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Github repo\",\n        \"url\": \"https://github.com/DevinBayly/neuro-choro\"\n      },\n      {\n        \"text\": \"Link: Read the docs website\",\n        \"url\": \"https://neuroimaging-core-docs.readthedocs.io/en/latest/pages/choropleths.html\"\n      }\n    ],\n    \"contact\": \"Dianne Patterson\"\n  }\n] \n","export default [\n  {\n    \"title\": \"Example Github Repository\",\n    \"subtext\": \"I created a Github repository for our team to store our documentation and demonstrations of completed projects. It also features a listing of our offerings, and instructions on how to submit a request on the project intake page.\",\n    \"link\": \"examplerepo\",\n    \"image\": \"examples.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link:  Github repo \",\n        \"url\": \"https://github.com/UA-ResearchComputing-Data-Visualization/UA-ResearchComputing-Data-Visualization.github.io\"\n      },\n      {\n        \"text\": \"Link:   webpage\",\n        \"url\": \"https://ua-researchcomputing-data-visualization.github.io/\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Project Intake Website\",\n    \"subtext\": \"This website lets a user create a project request filling out specific questions that help us understand their request. Upon submission, the vislab-consult email list receives a digest of this information, and I'm then able to decide what follow up is appropriate. \",\n    \"image\": \"intake.png\",\n    \"link\": \"intakewebsite\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: \",\n        \"url\": \"https://rtdv-intake.glitch.me/\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Flyers\",\n    \"subtext\": \"I created flyers for offerings and events that I hosted or was involved in during the last year. These flyers increase awareness for drop ins and events, and give me a brief moment to share some of the visualization designs I've used.\",\n    \"image\": \"flyers.png\",\n    \"link\": \"flyers\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Research Technologies Drop Ins\",\n        \"url\": \"https://drive.google.com/file/d/16qQYLszz5aX0FF8vADbxNSCzpqUuL6bK/view?usp=sharing\"\n      },\n      {\n        \"text\": \"Link:   Public Health Drop Ins: Meet and Greet\",\n        \"url\": \"https://drive.google.com/file/d/127V1siO0qPnzMg-LwOSCikf9uT2i8C_O/view?usp=sharing\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Logos\",\n    \"subtext\": \"To better tie our various services together I worked on a Logo with Mariah Wall from the Cyverse group here on campus.\",\n    \"link\": \"logos\",\n    \"image\": \"logos.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Illustrator Logos File\",\n        \"url\": \"https://drive.google.com/file/d/1vmTPsHxhlX8aEj73rRYkSTafOLxkjet9/view?usp=sharing\"\n      }\n    ],\n    \"contact\": \"\"\n  }\n]\n","/*\nfall 2021 presentations roadshow 2 catalyst, ENVS, RTG, levelup\nieee satelite vis presenting research technologies newest visualization capabilites\n\n*/\n\n\nexport default [\n\n  {\n    \"title\": \"IEEE Vis Conference Satellite Presentation\",\n    \"subtext\": \"I am part of the organizing committee for a satellite viewing of the IEEE VIS conference. In conjunction with the schedule arranged by the visualization faculty here on campus I'll be presenting on behalf of the Research Technologies department about our newest methods for supporting vis on the HPC. I plan to use this as a moment to demonstrate the things that I've learned with Nvidia's new tool 'Omniverse', and its remote visualization capacity in specific.\",\n    \"link\": \"ieee_satellite\",\n    \"image\": \"developing.png\",\n    \"projlinks\": \"\",\n    \"contact\": \"Josh Levine, Kate Isaacs, Carlos Scheidegger\"\n  },\n  {\n    \"title\": \"Data Vis Roadshow Fall 2021\",\n    \"subtext\": \"The roadshow is booting back up for 5 more presentations this fall. We kick off with Catalyst Studios presentation for general audiences, then present for ENVS graduate colloqium, then the graduate students of Laura Miller's Research Training Group in the Math department, followed by Level-up at Tech Core, and one last presentation at Catalyst to wrap up.\",\n    \"link\": \"roadshow_fall_2021\",\n    \"image\": \"developing.png\",\n    \"projlinks\": \"\",\n    \"contact\": \"Jeff Oliver, Kiri Carini\"\n  },\n  {\n    \"title\": \"ResBaz: Intro to Observable Notebooks\",\n    \"subtext\": \"I taught a 2 hour workshop in the 2021 U of A ResBaz conference on how to use Observable notebooks for visualization.\",\n    \"link\": \"resbaz_observable\",\n    \"image\": \"observable_resbaz.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Presentation notebook \",\n        \"url\": \"https://observablehq.com/@devinbayly/observable-resbaz-workshop\"\n      }, {\n        \"text\": \"Workshop Page\",\n        \"url\": \"https://hackmd.io/-XS5Mqh8TA2EHjTHCQ_4tw\"\n\n      },\n      {\n        \"text\": \"Recording\",\n        \"url\": \"https://www.youtube.com/watch?v=mnXfmRguUIs\"\n      }\n    ],\n    \"contact\": \"Alex Bigelow\"\n  },\n  {\n    \"title\": \"Data Vis Road Show Spring/Summer 2021 edition\",\n    \"subtext\": \"I have been working with Jeff Oliver from the U of A main library Data Coop on Intro to data vis presentations for graduate seminars. In the spring of 2021 we presented for the U of A civil engineering course CE 596, and Laura Miller's Research Training Group July 14th.\",\n    \"link\": \"roadshow_spring_summer_2021\",\n    \"image\": \"roadshow.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Presentation CE \",\n        \"url\": \"https://docs.google.com/presentation/d/1qNqYZWhDF2S_hx_Fi2ob2jT6IJcLQfgZlKY2ctGWK0c/edit?usp=sharing\"\n      }, {\n        \"text\": \"Presentation RTG\",\n        \"url\": \"https://docs.google.com/presentation/d/1JqKo-03ti1PD5asvLc-MZNo1B_JGyW2dJZC4pad_imE/edit?usp=sharing\"\n      }\n    ],\n    \"contact\": \"Jeff Oliver, Laura Miller, Kevin Lin, Kevin Lansey\"\n  },\n  {\n    \"title\": \"Women's hackathon spring 2020\",\n    \"subtext\": \"I will be teaching a 'Hackathon skill building' workshop on creative coding using p5.js through the OpenProcessing platform. Attendees will have skills then to create web resources for their respective hackathon projects if they like.\",\n    \"link\": \"womens_hackathon_2020\",\n    \"image\": \"womens_hackathon.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"In progress\",\n        \"url\": \"\"\n      }\n    ],\n    \"contact\": \"Jen Nichols\"\n  },\n  {\n    \"title\": \"Mt. Lemmon in Your Pocket-Creating a Virtual Reality Tour\",\n    \"subtext\": \"This is a demo of a workflow used to create 3D modeling assets using publically available geospatial data. I offered this workshop as part of the GIS Week 2020. The entire demo was 90 minutes and attended by ~20 individuals over zoom. All the teaching material is available at links below, and a recording is provided as well.\",\n    \"link\": \"GIS_week2020\",\n    \"image\": \"gis_workshop_thumb.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Workshop Materials\",\n        \"url\": \"http://maptime.io/tucson/sessions/GIS_day_workshop_11-2020/\"\n      },\n      {\n        \"text\": \"Youtube recording\",\n        \"url\": \"https://www.youtube.com/watch?v=icnyQwJHVxQ&feature=youtu.be\"\n      }\n    ],\n    \"contact\": \"Kiri Carini\"\n  },\n  {\n    \"title\": \"Tech-Core Level Up--Monday, Sept 28 2020\",\n    \"subtext\": \"This will be a repeat of the previous workshop that I gave. Same focus will be on using Glitch, A-frame, and Blender to create a WebVR scene  for participants.\",\n    \"link\": \"techcoresept28\",\n    \"image\": \"techcore_blacktext.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Presentation and resources\",\n        \"url\": \"https://devinbayly.github.io/tech-core-presentation/\"\n      }\n    ],\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"School of Public Health Meet and greet--Friday, Feb 7 2020\",\n    \"subtext\": \"Synopsis: Introduction to Public Health drop in offerings, and tour of basic data visualization tools available for independent investigation\",\n    \"image\": \"mezcoph_dropin.png\",\n    \"link\": \"meetandgreet\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: presentation\",\n        \"url\": \"https://meet-and-greet-presentation.glitch.me/#/\"\n      }\n    ],\n    \"contact\": \"Kiri Carini, Jean McClelland\"\n  },\n  {\n    \"title\": \"Tech-Core Level Up--Tuesday, Mar 17 2020\",\n    \"subtext\": \"Synopsis: “This workshop will introduce attendees to options for rapid development of WebVR apps that relate to the display of 3D models and data. Emerging technologies presented will be the A-frame javascript library, the Glitch web app free hosting tool and the Blender open source modeling program featuring the cutting edge .gltf/.glb format for model assets. Join us for an evening and come away with your very own WebVR app and the resources to take you even further.”\",\n    \"link\": \"techcoremar20\",\n    \"image\": \"techcore_blacktext.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: presentation and resources\",\n        \"url\": \"https://devinbayly.github.io/tech-core-presentation/\"\n      }\n    ],\n    \"contact\": \"Victoria Ogino\"\n  },\n  {\n    \"title\": \"Maptime Tucson: Make your own Web pages with Github Pages--Thursday, Jan 23 2020\",\n    \"subtext\": \"Synopsis: “Come by for the first ever Maptime Tucson! We’ll be playing around with creating GitHub static web pages for resumes, portfolios or project sites. No experience with GitHub necessary. We’ll learn together!”\",\n    \"link\": \"maptime\",\n    \"image\": \"maptime_logo.png\",\n    \"projlinks\": [\n      {\n        \"text\": \"Link: Presentation slides\",\n        \"url\": \"https://devinbayly.github.io/tucson/sessions/github_pages_01-2020/#/what-is-maptime\"\n      }\n    ],\n    \"contact\": \"Kiri Carini\"\n  },\n  {\n    \"title\": \"Women’s Hackathon--Saturday, Oct 19 2019\",\n    \"subtext\": \"Synopsis: “This course will introduce participants to the A-Frame javascript/html library for generating Virtual Reality scenes on the web. Following an introduction to the merits of A-Frame, the rest of the workshop will be hands-on demonstrations of scene and content creation. Time permitting, this workshop will end with an example of Mozilla's Social VR project known as Hubs built using A-Frame.”\",\n    \"link\": \"womenshack19\",\n    \"image\": \"womens_hackathon.png\",\n    \"contact\": \"Jen Nichols, Magali Sanchez\",\n    \"projlinks\": [\n      {\n        \"text\": \"\",\n        \"url\": \"\"\n      }\n    ]\n  }\n]\n","/*\nare we vulcan yet?\nVideo streaming 101 for remote visualization\nOmniverse\n\n*/\n\n\nexport default [\n  {\n      \"title\":\"VirtualGL for nVidia Accelerated Remote HPC Visualizations\",\n      \"subtext\":\"This protocol will expand on previous work in letting users connect their local work machines to graphical applications running on the HPC. The benefit will be that the actual screen rendering will be accomplished by the GPU allocated to their session. This will lead to increased frames per second, and more responsive applications. It will also make it possible to perform web visualizations on the HPC with the benefit of the hardware on the HPC. This will greatly improve the range of projects I can tackle with the benefit of the HPC.\",\n      \"image\":\"xpra_vgl.png\",\n      \"link\":\"virtualgl\",\n      \"projlinks\":[\n        {\n          \"text\":\"Virtual GL Xpra and remote desktop with GlxSpheres64\",\n          \"url\": \"https://drive.google.com/file/d/1YB-OeX1mzP2tIoavSQ8hBt3nG1LkWgUa/view?usp=sharing\"\n        }\n      ],\n      \"contact\":\"\"\n     },\n  {\n    \"title\": \"Iodide on HPC\",\n    \"subtext\": \"Iodide was an effort to do data science entirely in the browser. I believed it could be used for researchers to explore and visualize their results all from within the HPC environment. Unfortunately, I moved away from this as there are memory bottlenecks that prevent browser solutions from being a best fit for the HPC environment. \",\n    \"link\":\"iodide\",\n    \"image\": \"iodide.png\",\n    \"projlinks\": \"\",\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Network Managed Computation with Jetstream and HPC\",\n    \"subtext\": \"A networked program is one where the graphical interface runs in a different machine than the computation. I successfully created a method to run the Metashape program between a Jetstream virtual machine, and the HPC. This made it possible to use Metashape as if it was on your local computer, but with the performance of the HPC allocation.\",\n    \"link\":\"jetstreamhpc\",\n    \"image\": \"metashape_jetstream.png\",\n    \"projlinks\": \"\",\n    \"contact\": \"\"\n  },\n  {\n    \"title\": \"Xpra and Singularity for Comprehensive Graphical Application Support on HPC\",\n    \"subtext\": \"I continued to experiment with the above methods and created a technique that doesn’t require Jetstream, and works with all the programs I’ve tested. This means a user can use any specific program like it is installed on their local computer, but with the performance of whatever active job they are running on the HPC. \",\n    \"image\": \"xpra_singularity.png\",\n    \"link\":\"xprasingularity\",\n    \"projlinks\": \"\",\n    \"contact\": \"\"\n  }\n] ","<script>\n  export let Info;\n  import { onMount } from \"svelte\";\n  onMount(() => {\n    console.log(Info);\n  });\n</script>\n\n<style>\n  .tile {\n    border: rgba(0, 0, 0, 0.25) solid 2px;\n    border-radius: 10px;\n    padding: 2px;\n    margin: 2% auto;\n    display: flex;\n    width: 80%;\n    \n    background:white;\n    display:table;\n  }\n  img {\n    display: block;\n    width: 100%;\n  }\n  h2 {\n    text-align: center;\n  }\n  a {\n    color: black;\n  }\n</style>\n\n<div class=\"tile\">\n  <a href={'#' + Info.link}>\n    <div>\n      <img src={Info.image} alt=\"\" />\n    </div>\n    <div>\n      <h2>{Info.title}</h2>\n    </div>\n  </a>\n</div>\n","<script>\n  import ProjectTilesArray from \"./project_data.js\";\n  import OrgTiles from \"./organization_data.js\";\n  import WorkshopsTiles from \"./workshops_data.js\";\n  import HPCTiles from \"./hpc_data.js\";\n\n  import STile from \"./simple_tile.svelte\";\n  import { onMount } from \"svelte\";\n  let holder;\n  onMount(() => {\n    console.log(ProjectTilesArray.length);\n    let allTiles = [\n      ...OrgTiles,\n      ...WorkshopsTiles,\n      ...ProjectTilesArray,\n      ...HPCTiles\n    ];\n    let sorted = [...allTiles].sort((a,b)=>{\n      // if under construction put first\n      if (a.image ==\"developing.png\"){\n        return -1\n      } else {\n        return 1\n      }\n    })\n    for (let tile of sorted) {\n      console.log(tile)\n      new STile({\n        target:holder, \n        props: {\n          Info: tile\n        }\n      });\n    }\n    console.log(holder.getBoundingClientRect().height)\n    // setTimeout(()=> {\n    //     let avHeight = holder.getBoundingClientRect().height/allTiles.length\n    //     holder.style.height = `${holder.getBoundingClientRect().height/2.5}px`\n    // },3000)\n  });\n</script>\n\n<style>\n  .holder {\n    background:lightgray;\n    border-radius:10px;\n    columns:4;\n    padding:2%;\n  }\n  #outer {\n    display: flex;\n    width:100%;\n    justify-content: center;\n  }\n</style>\n\n<div id=\"outer\">\n  <div class=\"holder\" bind:this={holder} />\n</div>\n","<script>\n  export let info;\n  let holder\n  import { onMount } from \"svelte\";\n  onMount(()=> {\n      holder.id = `${info.link}`\n      console.log(\"info is\",info)\n  })\n</script>\n\n<style>\n.links-holder {\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\n}\n.links-holder li {\nwidth:80%\n}\n</style>\n\n<div class=\"infoDiv\" bind:this={holder}>\n<div id=\"contents\">\n  <div id=\"text\">\n    <h2>{info.title}</h2>\n    <p>{info.subtext}</p>\n    {#if info.contact!= \"\"}\n    <p>Contact: {info.contact}</p>\n    {/if}\n    {#if info.projlinks != undefined }\n\n\t    <div class=\"links-holder\">\n\t     {#each info.projlinks as {text,url},i}\n\t     {#if url==\"\"}\n\t     {:else}\n\t\t      {#if text != \"In progress\"}\n\t\t     <li>\n\t\t\t\t<p>{text} </p>\n\t\t\t\t<a href=\"{url}\">{url}</a>\n\t\t\t</li>\n\t\t\t\t{:else}\n\t\t\t\t<p> In progress</p>\n\t\t\t{/if}\n\t\t\t{/if}\n\t     {/each}\n\t     </div>\n     {/if}\n  </div>\n</div>\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n  import InfoSection from \"./info_section.svelte\"\n  export let Heading, InfoArray;\n  onMount(()=> {\n      console.log(InfoArray)\n  })\n</script>\n\n<style>\n  #holder {\n    display: flex;\n    width: 80%;\n    flex-wrap: wrap;\n    justify-content: start;\n  }\n  #center {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n\n<h2>{Heading}</h2>\n<div id=\"center\">\n  <div id=\"holder\" >\n     {#each InfoArray as info} <InfoSection {info}></InfoSection> {/each}\n  </div>\n</div>","<script>\nimport LowerInfo from \"./lower_info.svelte\"\n  import InfoArray from \"./project_data.js\"\n  let Heading = \"Projects\";\n</script>\n<LowerInfo {Heading} {InfoArray}></LowerInfo>\n","<script>\nimport LowerInfo from \"./lower_info.svelte\"\n  import InfoArray from \"./hpc_data.js\"\n  let Heading = \"General HPC Protocols\";\n</script>\n<LowerInfo {Heading} {InfoArray}></LowerInfo>\n","\n<script>\nimport LowerInfo from \"./lower_info.svelte\"\n  import InfoArray from \"./organization_data.js\"\n  let Heading = \"Data & Visualization Consulting Organizational Development\";\n</script>\n<LowerInfo {Heading} {InfoArray}></LowerInfo>\n","<script>\nimport LowerInfo from \"./lower_info.svelte\"\n  import InfoArray from \"./workshops_data.js\"\n  let Heading = \"Workshops\";\n</script>\n<LowerInfo {Heading} {InfoArray}></LowerInfo>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","title","image","link","subtext","projlinks","url","contact","Info","console","log","holder","ProjectTilesArray","sorted","OrgTiles","WorkshopsTiles","HPCTiles","sort","tile","STile","getBoundingClientRect","height","undefined","info","id","r","Heading","InfoArray","body"],"mappings":"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"}