{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "TileElement.svelte",
    "grid.svelte",
    "grid2.svelte",
    "lower_info.svelte"
  ],
  "sourcesContent": [
    "<script>\n  //import Examples from \"./examples.svelte\"\n  //import Canvas from \"./canvas.svelte\"\n  import Projects from \"./projects.svelte\";\n  import GeneralHPC from \"./generalhpc.svelte\";\n  import Organization from \"./organization.svelte\";\n  import Dropins from \"./dropins.svelte\";\n  import Workshops from \"./workshops.svelte\";\n  import ProjectsInfo from \"./projects_info.svelte\";\n  import HPCInfo from \"./hpc_info.svelte\";\n  import OrgInfo from \"./organization_info.svelte\";\n</script>\n\n<style>\n  /* vertical text holder */\n  .vtholder {\n    display: flex;\n    flex-direction: column;\n  }\n  .vholder {\n    display: flex;\n    flex-direction: column;\n    width: 80%;\n  }\n  .hholder {\n    display: flex;\n    width: 80%;\n    align-items: baseline;\n  }\n  .hholder div {\n    margin-right: 5%;\n  }\n\n  #center {\n    display: flex;\n    justify-content: center;\n  }\n  #top {\n    display: flex;\n    justify-content: center;\n  }\n  .infoOuter {\n    display: flex;\n    justify-content: center;\n  }\n  .infoInner {\n    width: 80%;\n  }\n</style>\n\n<div id=\"top\">\n  <div class=\"hholder\">\n    <div id=\"buffer\">\n      <img src=\"logo.png\" />\n    </div>\n    <div id=\"info\">\n      <a href=\"#infoText\">\n        <h3>RTDV-Info</h3>\n      </a>\n    </div>\n    <div id=\"who\">\n      <a href=\"#whoText\">\n        <h3>Members</h3>\n      </a>\n    </div>\n    <div id=\"intake\">\n      <a href=\"rtdv-intake.glitch.me\">\n        <h3>Project Request</h3>\n      </a>\n    </div>\n    <div id=\"hpc\">\n      <a href=\"#hpcText\">\n        <h3>UA HPC</h3>\n      </a>\n    </div>\n  </div>\n</div>\n<div id=\"center\">\n  <div class=\"vholder\">\n    <h1>Enablement</h1>\n    <Projects />\n    <GeneralHPC />\n    <Organization />\n    <h1>Engagement</h1>\n    <Dropins />\n    <Workshops />\n\n    <div id=\"infoSection\">\n      <!-- this is where the tiles and links should take us -->\n      <div id=\"infoText\">\n        <h1>RTDV - Info</h1>\n        <div class=\"infoOuter\">\n          <div class=\"infoInner\">\n            <h3>What is Visualization?</h3>\n            <p>\n              Visualization Consulting is a service that allows researchers to\n              create graphical representations of their data. These\n              computer-generated images and animations allow researchers to\n              visually analyze that data and see the results of changing\n              specific parameters.\n            </p>\n            <h3>What we do</h3>\n            <ul>\n\n              <li>Visualization, Animation, and Mapping Software</li>\n              <li>Virtual reality (VR) and augmented reality (AR)</li>\n              <li>Interactive web visualizations</li>\n              <li>3D modeling</li>\n              <li>Photogrammetry</li>\n              <li>Advanced or large scale visualizations using the HPC</li>\n\n            </ul>\n\n          </div>\n        </div>\n      </div>\n      <div id=\"whoText\">\n        <h1>Meet our team</h1>\n        <div class=\"infoOuter\">\n          <div class=\"infoInner\">\n            <h3>Devin Bayly</h3>\n            <p>\n              I'm a member of the Research Technologies Data & Visualization\n              team at the University of Arizona. I work with researchers,\n              students and faculty to bring your data to life through drop ins,\n              1:1 consultations, collaborative projects both short & long term,\n              and general protocols enhancing the visualization offerings of our\n              High Performance Computer (HPC).\n            </p>\n\n          </div>\n        </div>\n      </div>\n      <div id=\"hpcText\">\n        <h1>University of Arizona's HPC</h1>\n        <div class=\"infoOuter\">\n          <div class=\"infoInner\">\n            <h3>Homepage</h3>\n            <a href=\"https://it.arizona.edu/service/high-performance-computing\">\n              <p>\n                Here you can find an overview of the HPC service and other info\n                such as eligibility or support\n              </p>\n            </a>\n\n          </div>\n        </div>\n      </div>\n    </div>\n    <h1>Additional Information</h1>\n    <!-- verbose section, where the tiles link -->\n    <ProjectsInfo />\n    <HPCInfo />\n    <OrgInfo />\n\n  </div>\n</div>\n",
    "<script>\n  export let tile;\n  import { onMount } from \"svelte\";\n  onMount(() => {\n    console.log(tile);\n  });\n</script>\n\n<style>\n  .tileDiv {\n    width: 25%;\n    margin: 2%;\n    border-radius: 0.5em;\n    border: rgba(0, 0, 0, 0.25) solid 2px;\n  }\n  img {\n    display: block;\n    width:100%;\n  }\n  #text {\n      margin:1%;\n  }\n  h2{\n      text-align:center;\n  }\n  a {\n      color:black;\n  }\n\n</style>\n\n<div class=\"tileDiv\">\n<div id=\"contents\">\n<a href={\"#\"+tile.link}>\n  <img src={tile.image} alt=\"\" />\n  <div id=\"text\">\n    <h2>{tile.title}</h2>\n  </div>\n</a>\n</div>\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  export let Heading, TilesArray;\n  let holder\n\n  let Tile = () => ({\n    title,\n    image,\n    link\n  });\n\n  let TileElement = ({ tile }) => ({\n    tile,\n    makeDomEle() {\n      let tileDiv = document.createElement(\"div\");\n      tileDiv.className = \"TileElement\";\n      let contents = this.makeContents();\n      for (let c of contents) {\n        tileDiv.append(c);\n      }\n      return tileDiv;\n    },\n    makeContents() {\n      let titleDiv = document.createElement(\"div\")\n      let titleEle = document.createElement(\"h2\");\n      titleDiv.append(titleEle)\n      titleEle.innerHTML = this.tile.title;\n      let linkEle = document.createElement(\"a\");\n      linkEle.href = this.tile.link;\n      let imageEle = document.createElement(\"img\");\n      imageEle.src = this.tile.image;\n      let subText = document.createElement(\"p\");\n      subText.innerHTML = this.tile.subtext.length > 20?  this.tile.subtext.slice(0,20) + \"...\" : this.tile.subtext;\n      return [imageEle,titleDiv, linkEle, subText];\n    }\n  });\n\n  let BaseTileMaker = ({ tiles }) => ({\n    tiles,\n    getElements() {\n      return this.elements;\n    },\n    makeManyNum() {\n      this.elements = [];\n      for (let tile of this.tiles) {\n        let tileElement = TileElement({ tile });\n        this.elements.push(tileElement.makeDomEle());\n      }\n    }\n  });\n\n  // demo set, its a kind of builder for the demo version of tiles\n  let DemoBuilder = () => ({\n    build() {\n      let tile = {\n        title: \"test\",\n        image: \"test.png\",\n        link: \"test.html\",\n        subtext: \"loremipsum\"\n      };\n      let bt = BaseTileMaker({\n        tiles: Array(20)\n          .fill(0)\n          .map(e => {\n            return { ...tile };\n          })\n      });\n      bt.makeManyNum();\n      return bt;\n    }\n  });\nlet ExternalInputBuilder =()=>({\n  build() {\n    let bt = BaseTileMaker({\n      tiles:TilesArray\n    })\n    bt.makeManyNum()\n    return bt\n  }\n})\n  let director = () => ({\n    start(builder) {\n      let bt = builder.build();\n      console.log(bt);\n      for (let d of bt.getElements()) {\n        holder.append(d);\n      }\n    }\n  });\n\n  onMount(() => {\n    let d = director();\n    if (TilesArray == undefined) {\n      d.start(DemoBuilder());\n    } else {\n      // use a real Builder\n      d.start(ExternalInputBuilder())\n    }\n  });\n</script>\n\n<style>\n  #holder {\n    display: flex;\n    width: 80%;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  #center {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n\n<h2>{Heading}</h2>\n<div id=\"center\">\n  <div id=\"holder\" bind:this={holder} />\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Tile from \"./TileElement.svelte\"\n  export let Heading, TilesArray;\n  onMount(()=> {\n      console.log(TilesArray)\n  })\n</script>\n\n<style>\n  #holder {\n    display: flex;\n    width: 80%;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  #center {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n\n<h2>{Heading}</h2>\n<div id=\"center\">\n  <div id=\"holder\" >\n     {#each TilesArray as tile} <Tile {tile}></Tile> {/each}\n  </div>\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import InfoSection from \"./info_section.svelte\"\n  export let Heading, InfoArray;\n  onMount(()=> {\n      console.log(InfoArray)\n  })\n</script>\n\n<style>\n  #holder {\n    display: flex;\n    width: 80%;\n    flex-wrap: wrap;\n    justify-content: start;\n  }\n  #center {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n\n<h2>{Heading}</h2>\n<div id=\"center\">\n  <div id=\"holder\" >\n     {#each InfoArray as info} <InfoSection {info}></InfoSection> {/each}\n  </div>\n</div>"
  ],
  "names": [],
  "mappings": "AAmBE,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,WAAW,CAAE,QAAQ,AACvB,CAAC,AACD,uBAAQ,CAAC,GAAG,eAAC,CAAC,AACZ,YAAY,CAAE,EAAE,AAClB,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,KAAK,CAAE,GAAG,AACZ,CAAC;ACtCD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,EAAE,CACV,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,AACvC,CAAC,AACD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,KAAK,CACd,MAAM,IAAI,AACZ,CAAC,AACD,KAAK,eAAC,CAAC,AACH,OAAO,EAAE,AACb,CAAC,AACD,iBAAE,CAAC,AACC,WAAW,MAAM,AACrB,CAAC,AACD,CAAC,eAAC,CAAC,AACC,MAAM,KAAK,AACf,CAAC;AC2ED,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC;ACrGD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC;ACTD,OAAO,aAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,OAAO,aAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC"
}